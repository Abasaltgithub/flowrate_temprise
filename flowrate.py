# -*- coding: utf-8 -*-
"""FlowRate.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17JbKVM8a8iThB02VhNZjVK1iaeeLB0UU
"""

# use this ref: https://www.ihsenergy.ca/support/documentation_ca/Harmony/content/html_files/reference_material/calculations_and_correlations/pressure_loss_calculations.htm
# DOUBLE check your plot with http://www.pressure-drop.com/Online-Calculator/ 
# READ about Darcy–Weisbach equation
# RAED about Colebrook equation: We can solve the Colebrook equation iteratively using a numerical method like the Newton-Raphson method
# READ about Moody diagram 

import numpy as np
import matplotlib.pyplot as plt

# Parameters
D = 0.004  # m (pipe diameter)
L = 2  # m (pipe length)
ε = 0.0000013  # m (absolute roughness of the pipe)
ρ = 1000  # kg/m^3 (density of water)
A = np.pi * (D/2)**2  # m^2 (cross-sectional area of pipe)

# Range of flow rates to test
Q_range = np.linspace(0, 0.0001, 100)  # m^3/s
Q_range_LPM = Q_range * 60000 # L/min

# Calculate pressure drop for each flow rate
pressure_drop = []
for Q in Q_range:
    Re = (4 * Q) / (np.pi * D * ρ)
    if Re == 0:
        f = 0
    else:
        f = 0.25 / ((np.log10((ε/D)/3.7 + (5.74/Re**0.9)))**2)
    ΔP = (f * L * ρ * Q**2) / (2 * D * A**2)
    pressure_drop.append(ΔP / 100000)  # convert Pa to bar

# Plot results
plt.plot(Q_range_LPM, pressure_drop)
plt.title('Pressure Drop vs. Flow Rate')
plt.xlabel('Water Flow Rate (L/min)')
plt.ylabel('Pressure Drop (bar)')
plt.show()

import math
import matplotlib.pyplot as plt

internal_diameter = 73  # mm
wire_diameter = 0.71  # mm
total_wire_length = 0
outer_diameter = 0
resistivity = 1.68e-8  # Ohm*m
wire_cross_sectional_area = math.pi/4 * (wire_diameter/1000)**2
total_resistance = 0
current = 4
axial_turns = 20
radial_turns = 15

for i in range(radial_turns):
    wire_radius = internal_diameter/2 + (i + 0.5) * wire_diameter
    outer_diameter = 2 * (wire_radius + wire_diameter / 2)
    wire_length = 2 * math.pi * wire_radius * axial_turns
    total_wire_length += wire_length

total_resistance = resistivity * (total_wire_length / 1000) / wire_cross_sectional_area
dissipated_power = current ** 2 * total_resistance

water_density = 1000  # kg/m3
water_specific_heat = 4184  # J/(kg*K)
water_initial_temperature = 20  # C
water_mass_flow_rates = []
temperature_rises = []

for water_flow_rate in range(1, 201):  # iterate over water flow rates from 1 to 200 Lit/min
    water_mass_flow_rate = water_flow_rate / 60000 * water_density  # convert from Lit/min to kg/s
    water_mass_flow_rates.append(water_mass_flow_rate)
    water_velocity = water_mass_flow_rate / (wire_cross_sectional_area * water_density)  # calculate water velocity
    pressure_drop = 0.023 * water_velocity ** 1.85 * (total_wire_length / 1000) ** (-1.85) * (4 * water_mass_flow_rate / wire_cross_sectional_area ** 2 / math.pi ** 2 / water_density ** 2)  # calculate pressure drop using Darcy-Weisbach equation
    water_pressure = 1e5  # Pa
    water_inlet_temperature = 20  # C
    water_outlet_temperature = water_inlet_temperature + (dissipated_power / (water_mass_flow_rate * water_specific_heat))  # calculate outlet temperature
    temperature_rise = water_outlet_temperature - water_initial_temperature
    temperature_rises.append(temperature_rise)

plt.plot(water_mass_flow_rates, temperature_rises, c='r')
plt.xlabel('Water Flow Rate (Lit/min)')
plt.ylabel('Temperature Rise (°C)')
plt.title('Water Temperature Rise vs. Flow Rate')
plt.xlim(0,0.5)
plt.show()

# Print all outputs in a table
print(f"{'Internal diameter:':<25}{internal_diameter:.2f} mm")
print(f"{'Outer diameter:':<25}{outer_diameter:.2f} mm")
print(f"{'Total wire length:':<25}{total_wire_length/1000:.2f} m")
print(f"{'Total resistance:':<25}{total_resistance:.2f} ohms")
print(f"{'Total dissipated power:':<25}{dissipated_power:.2f} Watt")